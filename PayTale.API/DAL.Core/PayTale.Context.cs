//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PayTale.API.DAL.Core
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PayTaleEntities : DbContext
    {
        public PayTaleEntities()
            : base("name=PayTaleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ExpenseCategory> ExpenseCategories { get; set; }
        public virtual DbSet<GMember> GMembers { get; set; }
        public virtual DbSet<GTran> GTrans { get; set; }
        public virtual DbSet<MemberType> MemberTypes { get; set; }
        public virtual DbSet<PayTaleGroup> PayTaleGroups { get; set; }
        public virtual DbSet<PayTale> PayTales { get; set; }
        public virtual DbSet<PayTaleUser> PayTaleUsers { get; set; }
        public virtual DbSet<Wallet> Wallets { get; set; }
    
        public virtual ObjectResult<sp_GMembersAction_Result> sp_GMembersAction(Nullable<long> groupId, Nullable<long> memberId, string memberName, string gMemberType, Nullable<bool> active, string action)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(long));
    
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(long));
    
            var memberNameParameter = memberName != null ?
                new ObjectParameter("MemberName", memberName) :
                new ObjectParameter("MemberName", typeof(string));
    
            var gMemberTypeParameter = gMemberType != null ?
                new ObjectParameter("GMemberType", gMemberType) :
                new ObjectParameter("GMemberType", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GMembersAction_Result>("sp_GMembersAction", groupIdParameter, memberIdParameter, memberNameParameter, gMemberTypeParameter, activeParameter, actionParameter);
        }
    
        public virtual int sp_GTranAction(Nullable<long> groupId, string sTATUS)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(long));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GTranAction", groupIdParameter, sTATUSParameter);
        }
    
        public virtual ObjectResult<sp_PayTaleGroupAction_Result> sp_PayTaleGroupAction(string gName, string gType, string gCreator, string gAuditor, string action)
        {
            var gNameParameter = gName != null ?
                new ObjectParameter("GName", gName) :
                new ObjectParameter("GName", typeof(string));
    
            var gTypeParameter = gType != null ?
                new ObjectParameter("GType", gType) :
                new ObjectParameter("GType", typeof(string));
    
            var gCreatorParameter = gCreator != null ?
                new ObjectParameter("GCreator", gCreator) :
                new ObjectParameter("GCreator", typeof(string));
    
            var gAuditorParameter = gAuditor != null ?
                new ObjectParameter("GAuditor", gAuditor) :
                new ObjectParameter("GAuditor", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PayTaleGroupAction_Result>("sp_PayTaleGroupAction", gNameParameter, gTypeParameter, gCreatorParameter, gAuditorParameter, actionParameter);
        }
    
        public virtual int sp_PayTaleRpt(Nullable<long> groupId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PayTaleRpt", groupIdParameter);
        }
    
        public virtual ObjectResult<sp_PayTalesAction_Result> sp_PayTalesAction(Nullable<long> payID, Nullable<long> groupId, string gTranCode, Nullable<long> memberId, Nullable<long> mTypeId, Nullable<decimal> amount, string category, string note, string billSnap, string action, string payMaster)
        {
            var payIDParameter = payID.HasValue ?
                new ObjectParameter("PayID", payID) :
                new ObjectParameter("PayID", typeof(long));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(long));
    
            var gTranCodeParameter = gTranCode != null ?
                new ObjectParameter("GTranCode", gTranCode) :
                new ObjectParameter("GTranCode", typeof(string));
    
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(long));
    
            var mTypeIdParameter = mTypeId.HasValue ?
                new ObjectParameter("MTypeId", mTypeId) :
                new ObjectParameter("MTypeId", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var billSnapParameter = billSnap != null ?
                new ObjectParameter("BillSnap", billSnap) :
                new ObjectParameter("BillSnap", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var payMasterParameter = payMaster != null ?
                new ObjectParameter("PayMaster", payMaster) :
                new ObjectParameter("PayMaster", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PayTalesAction_Result>("sp_PayTalesAction", payIDParameter, groupIdParameter, gTranCodeParameter, memberIdParameter, mTypeIdParameter, amountParameter, categoryParameter, noteParameter, billSnapParameter, actionParameter, payMasterParameter);
        }
    
        public virtual ObjectResult<sp_UserAction_Result> sp_UserAction(string memberName, string userEmail, string password, Nullable<bool> active, string action)
        {
            var memberNameParameter = memberName != null ?
                new ObjectParameter("MemberName", memberName) :
                new ObjectParameter("MemberName", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserAction_Result>("sp_UserAction", memberNameParameter, userEmailParameter, passwordParameter, activeParameter, actionParameter);
        }
    
        public virtual int sp_WalletBalancePlus(Nullable<long> groupId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_WalletBalancePlus", groupIdParameter);
        }
    
        public virtual int sp_WalletAction(Nullable<long> groupId, string gTranCode, Nullable<long> memberId, Nullable<decimal> walletAmount, string amtType, string action, string payMaster)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(long));
    
            var gTranCodeParameter = gTranCode != null ?
                new ObjectParameter("GTranCode", gTranCode) :
                new ObjectParameter("GTranCode", typeof(string));
    
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(long));
    
            var walletAmountParameter = walletAmount.HasValue ?
                new ObjectParameter("WalletAmount", walletAmount) :
                new ObjectParameter("WalletAmount", typeof(decimal));
    
            var amtTypeParameter = amtType != null ?
                new ObjectParameter("AmtType", amtType) :
                new ObjectParameter("AmtType", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var payMasterParameter = payMaster != null ?
                new ObjectParameter("PayMaster", payMaster) :
                new ObjectParameter("PayMaster", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_WalletAction", groupIdParameter, gTranCodeParameter, memberIdParameter, walletAmountParameter, amtTypeParameter, actionParameter, payMasterParameter);
        }
    }
}
